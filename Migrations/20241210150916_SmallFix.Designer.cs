// <auto-generated />
using System;
using CargoAutomationSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CargoAutomationSystem.Migrations
{
    [DbContext(typeof(CargoDbContext))]
    [Migration("20241210150916_SmallFix")]
    partial class SmallFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CargoAutomationSystem.Entity.Branch", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BranchId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("BranchId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("CargoAutomationSystem.Entity.BranchCargo", b =>
                {
                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.HasKey("BranchId", "CargoId");

                    b.HasIndex("CargoId");

                    b.ToTable("BranchCargos");
                });

            modelBuilder.Entity("CargoAutomationSystem.Entity.Cargo", b =>
                {
                    b.Property<int>("CargoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CargoId"));

                    b.Property<int>("CurrentBranchId")
                        .HasColumnType("int");

                    b.Property<string>("HashCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RecipientAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RecipientId")
                        .HasColumnType("int");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RecipientPhone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CargoId");

                    b.HasIndex("CurrentBranchId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("SenderId");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("CargoAutomationSystem.Entity.CargoProcess", b =>
                {
                    b.Property<int>("CargoProcessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CargoProcessId"));

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<string>("Process")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CargoProcessId");

                    b.HasIndex("CargoId");

                    b.ToTable("CargoProcesses");
                });

            modelBuilder.Entity("CargoAutomationSystem.Entity.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsTemporary")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CargoAutomationSystem.Entity.UserCargo", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("CargoId")
                        .HasColumnType("int");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.HasKey("UserId", "CargoId");

                    b.HasIndex("CargoId");

                    b.ToTable("UserCargos");
                });

            modelBuilder.Entity("CargoAutomationSystem.Entity.BranchCargo", b =>
                {
                    b.HasOne("CargoAutomationSystem.Entity.Branch", "Branch")
                        .WithMany("BranchCargos")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CargoAutomationSystem.Entity.Cargo", "Cargo")
                        .WithMany("BranchCargos")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Cargo");
                });

            modelBuilder.Entity("CargoAutomationSystem.Entity.Cargo", b =>
                {
                    b.HasOne("CargoAutomationSystem.Entity.Branch", "CurrentBranch")
                        .WithMany()
                        .HasForeignKey("CurrentBranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CargoAutomationSystem.Entity.User", "Recipient")
                        .WithMany()
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CargoAutomationSystem.Entity.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentBranch");

                    b.Navigation("Recipient");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("CargoAutomationSystem.Entity.CargoProcess", b =>
                {
                    b.HasOne("CargoAutomationSystem.Entity.Cargo", "Cargo")
                        .WithMany("CargoProcesses")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");
                });

            modelBuilder.Entity("CargoAutomationSystem.Entity.UserCargo", b =>
                {
                    b.HasOne("CargoAutomationSystem.Entity.Cargo", "Cargo")
                        .WithMany("UserCargos")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CargoAutomationSystem.Entity.User", "User")
                        .WithMany("UserCargos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CargoAutomationSystem.Entity.Branch", b =>
                {
                    b.Navigation("BranchCargos");
                });

            modelBuilder.Entity("CargoAutomationSystem.Entity.Cargo", b =>
                {
                    b.Navigation("BranchCargos");

                    b.Navigation("CargoProcesses");

                    b.Navigation("UserCargos");
                });

            modelBuilder.Entity("CargoAutomationSystem.Entity.User", b =>
                {
                    b.Navigation("UserCargos");
                });
#pragma warning restore 612, 618
        }
    }
}
